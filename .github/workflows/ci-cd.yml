# CI/CD workflow for Pai Nai Dee FastAPI project

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, master ] # Added master
  pull_request:
    branches: [ main, develop, master ] # Added master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Optional: true by default, false means all matrix jobs complete even if one fails
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Updated to v4

    - name: Set up Python
      uses: actions/setup-python@v4 # Updated to v4
      with:
        python-version: ${{ matrix.python-version }} # Using matrix Python version
        cache: 'pip' # Cache pip dependencies

    - name: Install project dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pai_nai_dee_backend/requirements.txt

    - name: Install linting and formatting tools
      run: |
        pip install black flake8 pytest # Ensure pytest is also here if not in requirements.txt for some reason

    - name: Run Black (Format Check)
      run: |
        black --check pai_nai_dee_backend

    - name: Run Flake8 (Lint)
      run: |
        flake8 pai_nai_dee_backend --count --select=E9,F63,F7,F82 --show-source --statistics
        # Customize Flake8 options as needed, e.g., ignore specific errors, max-line-length
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Pytest
      run: |
        pip install -r pai_nai_dee_backend/requirements.txt
        pytest pai_nai_dee_backend # Pytest will discover tests in the specified directory

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' # Only run on pushes to main
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/painaidee-backend:latest
