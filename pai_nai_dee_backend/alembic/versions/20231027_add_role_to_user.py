"""add role to user table

Revision ID: 20231027_add_role_to_user
Revises:
Create Date: 2023-10-27 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# Import UserRole from the application.
# Adjust the import path as necessary based on your project structure.
# This assumes that 'app' is in the Python path when Alembic runs.
from app.schemas.user import UserRole


# revision identifiers, used by Alembic.
revision = '20231027_add_role_to_user'
down_revision = None  # This is the first migration
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    user_role_enum = sa.Enum(UserRole, name='userrole')
    user_role_enum.create(op.get_bind(), checkfirst=True) # Create ENUM type in DB for PostgreSQL

    op.add_column('users', sa.Column('role', user_role_enum, nullable=False, server_default=UserRole.USER.value))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'role')

    # Drop the ENUM type if it exists (for PostgreSQL)
    user_role_enum = sa.Enum(UserRole, name='userrole')
    user_role_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
